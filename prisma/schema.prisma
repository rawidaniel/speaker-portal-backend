// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_DATABASE_URL")
}

enum Role {
  SPEAKER
  ADMIN
}

enum RSVPStatus {
  YES
  NO
  MAYBE
}

model User {
  id          String    @id @default(uuid())
  email       String    @unique
  password    String
  name        String
  bio         String?
  photoUrl    String?
  contactInfo String?
  role        Role      @default(SPEAKER)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?

  events Event[] @relation("HostEvents")
  rsvps  RSVP[]  @relation("UserRSVPs")
}

model Event {
  id          String    @id @default(uuid())
  title       String
  description String
  dateTime    DateTime
  zoomLink    String
  duration    Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?

  creatorId String
  creator   User   @relation("HostEvents", fields: [creatorId], references: [id])
  rsvps     RSVP[] @relation("EventRSVPs")
}

model RSVP {
  id      String     @id @default(uuid())
  status  RSVPStatus
  userId  String
  eventId String

  user  User  @relation("UserRSVPs", fields: [userId], references: [id])
  event Event @relation("EventRSVPs", fields: [eventId], references: [id])

  @@unique([userId, eventId])
}
